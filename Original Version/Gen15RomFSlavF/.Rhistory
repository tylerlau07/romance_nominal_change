c_gen_info <- sapply(lastgen_info, "[[", 1) # Gender info
c_dec_info <- sapply(lastgen_info, "[[", 2) # Declension info
c_case_info <- sapply(lastgen_info, "[[", 3) # Case info
c_num_info <- sapply(lastgen_info, "[[", 4) # Number info
df_end$endcounts[names(table(c_gen_info)), trial_no] <- as.numeric(table(c_gen_info))
df_end$endcounts[names(table(c_dec_info)), trial_no] <- as.numeric(table(c_dec_info))
df_end$endcounts[names(table(c_case_info)), trial_no] <- as.numeric(table(c_case_info))
df_end$endcounts[names(table(c_num_info)), trial_no] <- as.numeric(table(c_num_info))
df_end$endcounts[names(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info)))
}
df_end$endcounts[is.na(df_end$endcounts)] <- 0
View(df_end$endcounts)
df_end$endpercents <- df_end$endcounts/2724
View(df_end$endpercents)
df_end$endpercents <- round(df_end$endcounts/2724, 2)
View(df_end$endpercents)
barplot(df_end$endpercents$`1`)
barplot(df_end$endpercents$`1`[which(df_end$endpercents$`1`) != 0])
barplot(df_end$endpercents$`1`[which(df_end$endpercents$`1` != 0)])
barplot(df_end$endpercents$`1`[which(df_end$endpercents$`1` != 0)], ylim = c(0,1))
x
df_end$endpercents
df_end$endpercents[12:]
df_end$endpercents[12:, ]
df_end$endpercents[12, ]
df_end$endpercents[c(12:), ]
df_end$endpercents[c(12:nrow(df_end$endpercents)), ]
barplot(df_analyze$endpercents$`1`[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1), xlab = )
df_analyze <- df_end$endpercents[c(12:nrow(df_end$endpercents)), ]
barplot(df_analyze$endpercents$`1`[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1), xlab = )
barplot(df_analyze$endpercents$`1`[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1))
barplot(df_analyze$endpercents$`1`[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1))
df_analyze
df_analyze
View(df_analyze)
barplot(df_analyze$endpercents$`1`)
barplot(df_analyze[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$endpercents$`1` != 0)], ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)], ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)], names.arg = rownames(df_analyze[which(df_analyze) != 0]), ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)], names.arg = rownames(df_analyze[which(df_analyze$`1` != 0)]), ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)], names.arg = c(1,2), ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)], ylim = c(0,1))
?barplot
geom_bar()
ggplot(df_analyze$`1`[which(df_analyze$`1` != 0)])+
geom_bar()
ggplot(df_analyze$`1`[which(df_analyze$`1` != 0)], aes(rownames(df_analyze)))+
geom_bar()
View(df_analyze)
View(df_analyze)
View(df_analyze$`1`)
View(df_analyze)
ggplot(df_analyze)+
geom_bar()
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = c(1,2), ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = c("1","2"), ylim = c(0,1))
as.character(1:11)
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = as.character(1:11), ylim = c(0,1))
df_analyze$`1`
df_analyze$`1`[which(df_analyze$`1` != 0)]
which(df_analyze$`1` != 0)
rownames(df_analyze)[which(df_analyze$`1` != 0)]
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], ylim = c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], ylim = c(0,1), horiz = TRUE)
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE)
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2)
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1), mar=c(5,4,8,2))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1), mar=c(1,1,1,1))
par(mar=c(1,1,1,1))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
par(mar=c(1,8,4,2))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
par(mar=c(1,8,4,5))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
par(mar=c(1,8,5,2))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
par(mar=c(5,8,5,2))
barplot(df_analyze$`1`[which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze$`1` != 0)], horiz = TRUE, las=2, xlim=c(0,1))
df_analyze <- df_end$endpercents[c(12:nrow(df_end$endpercents)), ]
View(df_analyze)
req_trial <- 2
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze$`1` != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1))
df_analyze <- df_end$endpercents[c(12:nrow(df_end$endpercents)), ]
req_trial <- 2
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1))
req_trial <- 3
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1))
req_trial <- 4
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1))
req_trial <- 5
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1))
req_trial <- 5
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", ylab = "Form", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 1
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", ylab = "Form", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 1
par(mar=c(5,8,5,2))
barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 3, labels=x)
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 3, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 2, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
text(bar_analyze, df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)], labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
text(bar_analyze, 1, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
text(bar_analyze, 1, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
text(bar_analyze, 1, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 1, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 0, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
text(bar_analyze, 6, labels=df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)])
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 3
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 1
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 3
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 4
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 5
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 1
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
plot_var <- "N to N"
ggplot(df_percents, aes(x=Generation, y=nTOn))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
setwd("~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/Gen15GnvTRomFSlavF")
source('~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/analyze.R', echo=TRUE)
files = list.files(pattern = '\\.csv')
files
source('~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/analyze.R', echo=TRUE)
setwd("~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/Gen15RomFSlavF")
source('~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/analyze.R', echo=TRUE)
source('~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/analyze.R', echo=TRUE)
source('~/Documents/Documents/Linguistics/Papers/Romanian Slavic Contact/Adding Case Forms Test/analyze.R', echo=TRUE)
df_end$endcounts[is.na(df_end$endcounts)] <- 0
View(df_end$endcounts)
df_end$endpercents <- round(df_end$endcounts/2724, 2)
View(df_end$endpercents)
df_analyze <- df_end$endpercents[c(12:nrow(df_end$endpercents)), ]
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
for (file in files){
read <- read_csv(file)
trial_no <- substring(file, regexpr("Trial", file)+5, regexpr(".csv", file)-1)
lastgen_info <- strsplit(read[[as.character(ncol(read)-2)]], ',') # Current generation info
c_gen_info <- sapply(lastgen_info, "[[", 1) # Gender info
c_dec_info <- sapply(lastgen_info, "[[", 2) # Declension info
c_case_info <- sapply(lastgen_info, "[[", 3) # Case info
c_num_info <- sapply(lastgen_info, "[[", 4) # Number info
df_end$endcounts[names(table(c_gen_info)), trial_no] <- as.numeric(table(c_gen_info))
df_end$endcounts[names(table(c_dec_info)), trial_no] <- as.numeric(table(c_dec_info))
df_end$endcounts[names(table(c_case_info)), trial_no] <- as.numeric(table(c_case_info))
df_end$endcounts[names(table(c_num_info)), trial_no] <- as.numeric(table(c_num_info))
df_end$endcounts[names(table(paste(c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_case_info, c_num_info)))
df_end$endcounts[names(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info)))
}
df_end$endcounts[is.na(df_end$endcounts)] <- 0
View(df_end$endcounts)
df_end$endpercents <- round(df_end$endcounts/2724, 2)
View(df_end$endpercents)
df_end <- list(endcounts = data.frame())
for (file in files){
read <- read_csv(file)
trial_no <- substring(file, regexpr("Trial", file)+5, regexpr(".csv", file)-1)
lastgen_info <- strsplit(read[[as.character(ncol(read)-2)]], ',') # Current generation info
c_gen_info <- sapply(lastgen_info, "[[", 1) # Gender info
c_dec_info <- sapply(lastgen_info, "[[", 2) # Declension info
c_case_info <- sapply(lastgen_info, "[[", 3) # Case info
c_num_info <- sapply(lastgen_info, "[[", 4) # Number info
df_end$endcounts[names(table(c_gen_info)), trial_no] <- as.numeric(table(c_gen_info))
df_end$endcounts[names(table(c_dec_info)), trial_no] <- as.numeric(table(c_dec_info))
df_end$endcounts[names(table(c_case_info)), trial_no] <- as.numeric(table(c_case_info))
df_end$endcounts[names(table(c_num_info)), trial_no] <- as.numeric(table(c_num_info))
df_end$endcounts[names(table(paste(c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_case_info, c_num_info)))
df_end$endcounts[names(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info)))
}
df_end$endcounts[is.na(df_end$endcounts)] <- 0
View(df_end$endcounts)
df_end$endpercents <- round(df_end$endcounts/2724, 2)
View(df_end$endpercents)
df_analyze <- df_end$endpercents[c(17:nrow(df_end$endpercents)), ]
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
df_analyze <- df_end$endpercents[c(17:nrow(df_end$endpercents)), ]
req_trial <- 1
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
df_analyze <- df_end$endpercents[c(17:nrow(df_end$endpercents)), ]
req_trial <- 1
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
df_end <- list(endcounts = data.frame())
for (file in files){
read <- read_csv(file)
trial_no <- substring(file, regexpr("Trial", file)+5, regexpr(".csv", file)-1)
lastgen_info <- strsplit(read[[as.character(ncol(read)-2)]], ',') # Current generation info
c_gen_info <- sapply(lastgen_info, "[[", 1) # Gender info
c_dec_info <- sapply(lastgen_info, "[[", 2) # Declension info
c_case_info <- sapply(lastgen_info, "[[", 3) # Case info
c_num_info <- sapply(lastgen_info, "[[", 4) # Number info
df_end$endcounts[names(table(c_gen_info)), trial_no] <- as.numeric(table(c_gen_info))
df_end$endcounts[names(table(c_dec_info)), trial_no] <- as.numeric(table(c_dec_info))
df_end$endcounts[names(table(c_case_info)), trial_no] <- as.numeric(table(c_case_info))
df_end$endcounts[names(table(c_num_info)), trial_no] <- as.numeric(table(c_num_info))
df_end$endcounts[names(table(paste(c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_case_info, c_num_info)))
df_end$endcounts[names(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info))), trial_no] <- as.numeric(table(paste(c_gen_info, c_dec_info, c_case_info, c_num_info)))
}
df_end$endcounts[is.na(df_end$endcounts)] <- 0
View(df_end$endcounts)
df_end$endpercents <- round(df_end$endcounts/2724, 2)
View(df_end$endpercents)
req_trial <- 12
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 4
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 12
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 4
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 7
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, decreasing=TRUE las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 7
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, decreasing=TRUE las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 7
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, decreasing=TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
total_counts <- list()
req_trial <- 1
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 4
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
df_percents
View(df_percents)
req_trial <- 2
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 3
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 5
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
req_trial <- 6
par(mar=c(5,8,5,2))
bar_analyze <- barplot(df_analyze[[req_trial]][which(df_analyze[[req_trial]] != 0)],  names.arg = rownames(df_analyze)[which(df_analyze[[req_trial]] != 0)], horiz = TRUE, las=2, xlim=c(0,1), xlab="%", main = paste("% of each form in the final Generation in Trial", as.character(req_trial)))
df_percents$Trial <- as.factor(df_percents$Trial)
plot_var <- "N to N"
ggplot(df_percents, aes(x=Generation, y=nTOn))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NSG to M"
ggplot(df_percents, aes(x=Generation, y=nTOn))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NSG to M"
ggplot(df_percents, aes(x=Generation, y=nsgTOm))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "N to M"
ggplot(df_percents, aes(x=Generation, y=nTOm))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NPL to FSG"
ggplot(df_percents, aes(x=Generation, y=nplTOfsg))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NPL to FPL"
ggplot(df_percents, aes(x=Generation, y=nplTOfpl))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NPL to MSG"
ggplot(df_percents, aes(x=Generation, y=nplTOfpl))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NPL to MSG"
ggplot(df_percents, aes(x=Generation, y=nplTOmsg))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
plot_var <- "NPL to MPL"
ggplot(df_percents, aes(x=Generation, y=nplTOmsg))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
df_percents$Trial <- as.factor(df_percents$Trial)
plot_var <- "NPL to MPL"
ggplot(df_percents, aes(x=Generation, y=nplTOmpl))+
geom_line(aes(color=Trial))+
scale_x_discrete(breaks = seq(from=1, to=max(df_percents$Generation), by=1))+
scale_y_continuous(limits=c(0,1))+
xlab("Generation") + ylab(paste("% of", plot_var))+
theme(legend.direction="horizontal",
legend.position="top", legend.title=element_text(size=20), legend.text=element_text(size=20),
axis.text=element_text(size=20),
axis.title=element_text(size=20),
plot.title=element_text(size=30))+
ggtitle(plot_var)+
guides(color=guide_legend(title="Trial"))
head(USArrests)
states <- rownames(USArrests)
head(states)
nchar(states)
tolower(states)
toupper(states)
casefold(states, upper = TRUE)
casefold(states, upper = FALSE)
num_chars <- nchar(states)
table(num_chars)
char_freqs <- table(num_chars)
barplot(char_freqs)
.pardefault <- par()
barplot(char_freqs, xlab = "Number of Characters")
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
barplot(char_freqs, xlab = "Number of Characters")
barplot(char_freqs, xlab = "Number of Characters", ylab = "Frequency", main = "Frequency of Number of Characters in States")
paste('Pumpkin', 'Pie')
paste('a', 'b', 'c', 'd', 'e')
paste('a', 'b', 'c', 'd', 'e', sep = '-')
paste('a', 1:5, sep = '.')
paste0('Pumpkin', 'Pie')
paste('Pumpkin', 'Pie', sep = '')
paste0('a', 1:5)
states
head(states)
head(states, 5)
head(nchar, 5)
nchar
num_chars
head(num_chars, 5)
paste(head(states, 5), head(num_chars, 5), sep = "=")
paste(head(states, 5), head(num_chars, 5), sep = " = ")
?paste90
?collapse
?paste0
paste0(head(states, 5))
paste0(head(states, 5), collapse = '')
substr('Berkeley', 1, 3)
substr(states)
substr(states, 1, 3)
substr(states, num_chars-3, num_chars)
substr(states, num_chars-4, num_chars)
substr(states, num_chars-2, num_chars)
paste0(substr(states, 1, 3), substr(states, num_chars-2, num_chars))
paste0(substr(states, 1, 1), substr(states, num_chars-2, num_chars))
states[num_chars == 4]
states[num_chars == 10]
paste(states[num_chars == 4], collapse = ", ")
numchars
num_chars
table(num_chars)
names(table(num_chars))
states_list <- list()
for(num_char in names(table(num_chars))) {
states_list[[paste(num_char, "chars", sep="-")]] <- paste(states[num_chars == 4], collapse = ", ")
}
states_list
states_list <- list()
for(num_char in names(table(num_chars))) {
states_list[[paste(num_char, "chars", sep="-")]] <- paste(states[num_chars == num_char], collapse = ", ")
}
states_list
3 %% 2
4 %% 2
states_list <- list()
for(num_char in names(table(num_chars))) {
states_list[[paste(num_char, "chars", sep="-")]] <- ifelse(num_char %% 2 == 0, paste(tolower(states[num_chars == num_char]), collapse = ", "), paste(toupper(states[num_chars == num_char]), collapse = ", "))
}
states_list
states_list <- list()
for(num_char in names(table(num_chars))) {
states_list[[paste(num_char, "chars", sep="-")]] <- ifelse(as.numeric(num_char) %% 2 == 0, paste(tolower(states[num_chars == num_char]), collapse = ", "), paste(toupper(states[num_chars == num_char]), collapse = ", "))
}
states_list
states_list <- list()
for(num_char in names(table(num_chars))) {
states_list[[paste(num_char, "chars", sep="-")]] <- ifelse(as.numeric(num_char) %% 2 == 0, paste(toupper(states[num_chars == num_char]), collapse = ", "), paste(tolower(states[num_chars == num_char]), collapse = ", "))
}
states_list
